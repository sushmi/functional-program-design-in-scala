<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="C02YH0K5JHD5" name="quickcheck.QuickCheckBinomialHeap" tests="7" errors="3" failures="0" skipped="0" time="-0.007" timestamp="2020-04-02T00:12:45">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="jna.platform.library.path" value="/usr/lib:/usr/lib"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/lib"/><property name="java.vm.version" value="25.192-b01"/><property name="gopherProxySet" value="false"/><property name="java.vm.vendor" value="Azul Systems, Inc."/><property name="java.vendor.url" value="http://www.azulsystems.com/"/><property name="path.separator" value=":"/><property name="jna.loaded" value="true"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="TH"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="jna.nosys" value="true"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/Users/sshrestha/stash/code/coursera/functional-program-design-in-scala/quickcheck"/><property name="java.runtime.version" value="1.8.0_192-b01"/><property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/><property name="idea.managed" value="true"/><property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/lib/endorsed"/><property name="os.arch" value="x86_64"/><property name="java.io.tmpdir" value="/var/folders/8c/phtz7b4x0235qb3vpv0xhtts8c1zll/T/"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Mac OS X"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/var/folders/8c/phtz7b4x0235qb3vpv0xhtts8c1zll/T/jna--1967465515/jna3407026999748751531.tmp"/><property name="java.library.path" value="/Users/sshrestha/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="10.14.3"/><property name="user.home" value="/Users/sshrestha"/><property name="user.timezone" value="Asia/Bangkok"/><property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/Users/sshrestha/Library/Application Support/IdeaIC2019.3/Scala/launcher/sbt-launch.jar"/><property name="user.name" value="sshrestha"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/Users/sshrestha/Library/Application Support/IdeaIC2019.3/Scala/launcher/sbt-launch.jar early(addPluginSbtFile=&quot;&quot;&quot;/private/var/folders/8c/phtz7b4x0235qb3vpv0xhtts8c1zll/T/idea1.sbt&quot;&quot;&quot;) ; set ideaPort in Global := 59850 ; idea-shell"/><property name="java.home" value="/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_192"/><property name="java.ext.dirs" value="/Users/sshrestha/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/><property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home/jre/classes"/><property name="java.vendor" value="Azul Systems, Inc."/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://www.azulsystems.com/support/"/><property name="sbt.supershell" value="false"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="sun.cpu.endian" value="little"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="quickcheck.QuickCheckBinomialHeap" name="gen1" time="-0.001">
                                                 
                                               </testcase><testcase classname="quickcheck.QuickCheckBinomialHeap" name="the minimum of the heap should be the smallest of the two elements inserted" time="-0.001">
                                                 
                                               </testcase><testcase classname="quickcheck.QuickCheckBinomialHeap" name="inserting an element and deleting the minimum on an empty heap should result into empty heap" time="-0.001">
                                                 
                                               </testcase><testcase classname="quickcheck.QuickCheckBinomialHeap" name="should get a sorted sequence of elements when continually finding and deleting minima" time="-0.001">
                                                 
                                               </testcase><testcase classname="quickcheck.QuickCheckBinomialHeap" name="finding a minimum of the melding of any two heaps should return a minimum of one or the other" time="-0.001">
                                                 <error message="java.util.NoSuchElementException: min of empty heap" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: java.util.NoSuchElementException: min of empty heap
	at quickcheck.BinomialHeap.findMin(Heap.scala:57)
	at quickcheck.BinomialHeap.findMin$(Heap.scala:56)
	at quickcheck.QuickCheckBinomialHeap$.findMin(QuickCheckSuite.scala:12)
	at quickcheck.QuickCheckBinomialHeap$.findMin(QuickCheckSuite.scala:12)
	at quickcheck.QuickCheckHeap.$anonfun$new$19(QuickCheck.scala:90)
	at quickcheck.QuickCheckHeap.$anonfun$new$19$adapted(QuickCheck.scala:88)
	at org.scalacheck.Prop$.$anonfun$forAll$18(Prop.scala:921)
	at scala.Function1.$anonfun$andThen$1(Function1.scala:85)
	at org.scalacheck.Prop$.$anonfun$forAllShrink$2(Prop.scala:761)
	at org.scalacheck.Prop$.secure(Prop.scala:471)
	at org.scalacheck.Prop$.result$1(Prop.scala:761)
	at org.scalacheck.Prop$.$anonfun$forAllShrink$1(Prop.scala:800)
	at org.scalacheck.Prop$.$anonfun$apply$1(Prop.scala:307)
	at org.scalacheck.PropFromFun.apply(Prop.scala:22)
	at org.scalacheck.Prop$.result$1(Prop.scala:762)
	at org.scalacheck.Prop$.$anonfun$forAllShrink$1(Prop.scala:800)
	at org.scalacheck.Prop$.$anonfun$apply$1(Prop.scala:307)
	at org.scalacheck.PropFromFun.apply(Prop.scala:22)
	at org.scalacheck.Prop$.$anonfun$delay$1(Prop.scala:476)
	at org.scalacheck.Prop$.$anonfun$apply$1(Prop.scala:307)
	at org.scalacheck.PropFromFun.apply(Prop.scala:22)
	at org.scalacheck.Test$.workerFun$1(Test.scala:326)
	at org.scalacheck.Test$.$anonfun$check$1(Test.scala:355)
	at org.scalacheck.Test$.$anonfun$check$1$adapted(Test.scala:355)
	at org.scalacheck.Platform$.runWorkers(Platform.scala:40)
	at org.scalacheck.Test$.check(Test.scala:355)
	at org.scalacheck.ScalaCheckRunner$$anon$2.executeInternal(ScalaCheckFramework.scala:123)
	at org.scalacheck.ScalaCheckRunner$$anon$2.$anonfun$execute$11(ScalaCheckFramework.scala:113)
	at org.scalacheck.ScalaCheckRunner$$anon$2.$anonfun$execute$11$adapted(ScalaCheckFramework.scala:112)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:904)
	at scala.collection.IterableOps$WithFilter.foreach(Iterable.scala:874)
	at org.scalacheck.ScalaCheckRunner$$anon$2.execute(ScalaCheckFramework.scala:112)
	at sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:304)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
</error>
                                               </testcase><testcase classname="quickcheck.QuickCheckBinomialHeap" name="two heaps should be of equal if removing min elements till both heaps empty" time="-0.001">
                                                 <error message="java.util.NoSuchElementException: delete min of empty heap" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: java.util.NoSuchElementException: delete min of empty heap
	at quickcheck.BinomialHeap.deleteMin(Heap.scala:64)
	at quickcheck.BinomialHeap.deleteMin$(Heap.scala:63)
	at quickcheck.QuickCheckBinomialHeap$.deleteMin(QuickCheckSuite.scala:12)
	at quickcheck.QuickCheckBinomialHeap$.deleteMin(QuickCheckSuite.scala:12)
	at quickcheck.QuickCheckHeap.$anonfun$new$24(QuickCheck.scala:107)
	at quickcheck.QuickCheckHeap.$anonfun$new$24$adapted(QuickCheck.scala:98)
	at org.scalacheck.Prop$.$anonfun$forAll$18(Prop.scala:921)
	at scala.Function1.$anonfun$andThen$1(Function1.scala:85)
	at org.scalacheck.Prop$.$anonfun$forAllShrink$2(Prop.scala:761)
	at org.scalacheck.Prop$.secure(Prop.scala:471)
	at org.scalacheck.Prop$.result$1(Prop.scala:761)
	at org.scalacheck.Prop$.$anonfun$forAllShrink$1(Prop.scala:800)
	at org.scalacheck.Prop$.$anonfun$apply$1(Prop.scala:307)
	at org.scalacheck.PropFromFun.apply(Prop.scala:22)
	at org.scalacheck.Prop$.result$1(Prop.scala:762)
	at org.scalacheck.Prop$.$anonfun$forAllShrink$1(Prop.scala:800)
	at org.scalacheck.Prop$.$anonfun$apply$1(Prop.scala:307)
	at org.scalacheck.PropFromFun.apply(Prop.scala:22)
	at org.scalacheck.Prop$.$anonfun$delay$1(Prop.scala:476)
	at org.scalacheck.Prop$.$anonfun$apply$1(Prop.scala:307)
	at org.scalacheck.PropFromFun.apply(Prop.scala:22)
	at org.scalacheck.Test$.workerFun$1(Test.scala:326)
	at org.scalacheck.Test$.$anonfun$check$1(Test.scala:355)
	at org.scalacheck.Test$.$anonfun$check$1$adapted(Test.scala:355)
	at org.scalacheck.Platform$.runWorkers(Platform.scala:40)
	at org.scalacheck.Test$.check(Test.scala:355)
	at org.scalacheck.ScalaCheckRunner$$anon$2.executeInternal(ScalaCheckFramework.scala:123)
	at org.scalacheck.ScalaCheckRunner$$anon$2.$anonfun$execute$11(ScalaCheckFramework.scala:113)
	at org.scalacheck.ScalaCheckRunner$$anon$2.$anonfun$execute$11$adapted(ScalaCheckFramework.scala:112)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:904)
	at scala.collection.IterableOps$WithFilter.foreach(Iterable.scala:874)
	at org.scalacheck.ScalaCheckRunner$$anon$2.execute(ScalaCheckFramework.scala:112)
	at sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:304)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
</error>
                                               </testcase><testcase classname="quickcheck.QuickCheckBinomialHeap" name="The minimal value of 2 heaps should be the minimal after dispacing it from heap 1 to 2 and melding both" time="-0.001">
                                                 <error message="java.util.NoSuchElementException: min of empty heap" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: java.util.NoSuchElementException: min of empty heap
	at quickcheck.BinomialHeap.findMin(Heap.scala:57)
	at quickcheck.BinomialHeap.findMin$(Heap.scala:56)
	at quickcheck.QuickCheckBinomialHeap$.findMin(QuickCheckSuite.scala:12)
	at quickcheck.QuickCheckBinomialHeap$.findMin(QuickCheckSuite.scala:12)
	at quickcheck.QuickCheckHeap.$anonfun$new$29(QuickCheck.scala:111)
	at quickcheck.QuickCheckHeap.$anonfun$new$29$adapted(QuickCheck.scala:110)
	at org.scalacheck.Prop$.$anonfun$forAll$18(Prop.scala:921)
	at scala.Function1.$anonfun$andThen$1(Function1.scala:85)
	at org.scalacheck.Prop$.$anonfun$forAllShrink$2(Prop.scala:761)
	at org.scalacheck.Prop$.secure(Prop.scala:471)
	at org.scalacheck.Prop$.result$1(Prop.scala:761)
	at org.scalacheck.Prop$.$anonfun$forAllShrink$1(Prop.scala:800)
	at org.scalacheck.Prop$.$anonfun$apply$1(Prop.scala:307)
	at org.scalacheck.PropFromFun.apply(Prop.scala:22)
	at org.scalacheck.Prop$.result$1(Prop.scala:762)
	at org.scalacheck.Prop$.$anonfun$forAllShrink$1(Prop.scala:800)
	at org.scalacheck.Prop$.$anonfun$apply$1(Prop.scala:307)
	at org.scalacheck.PropFromFun.apply(Prop.scala:22)
	at org.scalacheck.Prop$.$anonfun$delay$1(Prop.scala:476)
	at org.scalacheck.Prop$.$anonfun$apply$1(Prop.scala:307)
	at org.scalacheck.PropFromFun.apply(Prop.scala:22)
	at org.scalacheck.Test$.workerFun$1(Test.scala:326)
	at org.scalacheck.Test$.$anonfun$check$1(Test.scala:355)
	at org.scalacheck.Test$.$anonfun$check$1$adapted(Test.scala:355)
	at org.scalacheck.Platform$.runWorkers(Platform.scala:40)
	at org.scalacheck.Test$.check(Test.scala:355)
	at org.scalacheck.ScalaCheckRunner$$anon$2.executeInternal(ScalaCheckFramework.scala:123)
	at org.scalacheck.ScalaCheckRunner$$anon$2.$anonfun$execute$11(ScalaCheckFramework.scala:113)
	at org.scalacheck.ScalaCheckRunner$$anon$2.$anonfun$execute$11$adapted(ScalaCheckFramework.scala:112)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:904)
	at scala.collection.IterableOps$WithFilter.foreach(Iterable.scala:874)
	at org.scalacheck.ScalaCheckRunner$$anon$2.execute(ScalaCheckFramework.scala:112)
	at sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:304)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
</error>
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>